#include <topcoder.h>

int run(int N, int K, VI s)
{
  int ans = N;
  int n = s.size();

  vector<int> items(N, 0);
  sort(RALL(s));

  // 0を優先的に加えていく
  FOR(i,0,n){
    // increment from 0 to val
    int val = s[i];
    FOR(j,0, val){
      items[j]++;
    }
  }
  
  // K - 1以下の余剰を求める
  int reminder = 0;
  int people = 0;
  FOR(i,0,N){
    if (items[i] <= K - 1)
      reminder += (K - 1) - items[i];
    else
      people++;  // あふれた場合
  }

  // P(people);
  // P(reminder);

  if (people == 0)
    return 0;

  int max_value = people;
  // ひとつずつK-1以下になるように調節する
  for(int i = people - 1; i >= 0; i--){
    int d = items[i] - (K - 1);
    if (reminder >= d){
      reminder -= d;
      max_value--;
    }
  }
  return max_value;
}

int main()
{
  P(run(10,
        2,
        {1, 2, 3}));

  P(run(5,
        2,
        {1, 2, 3}));

  P(run(4,
        4,
        {4, 4, 4, 2}));
  
  P(run(20,
        3,
        {1, 10, 3, 4, 8, 15, 3, 16, 18, 2, 7, 3}));

  P(run(4,
        2,
        {1, 2, 1, 1, 3, 1, 2, 2, 1, 2, 1}));

  P(run(2,
        3,
        {1, 1, 1, 2}));

  // 192
  P(run(210, 19, {159, 95, 62, 18, 191, 12, 169, 184, 108, 86, 135, 105, 85, 47, 197, 194, 189, 110, 171, 193, 170, 44, 135, 153, 139, 7, 70, 191, 210, 64, 114, 57, 188, 56, 92, 201, 117, 189, 57, 106, 115, 56, 28, 176, 209, 46, 15, 152, 60, 66, 92, 8, 198, 89, 42, 159, 130, 85, 5, 13, 178, 105, 51, 89, 137, 193, 201, 158, 25, 30, 92, 10, 192, 31, 46, 209, 182, 123, 109, 3, 20, 77, 63, 82, 126, 198, 160, 115, 141, 118, 202, 172, 124, 136, 41, 54, 136, 20, 195, 189, 152, 0, 45, 43, 16, 188, 57, 181, 0, 193, 0, 84, 202, 187, 119, 56, 32, 71, 100, 10, 135, 176, 31, 133, 187, 5, 165, 205, 202, 161, 16, 184, 170, 122, 96, 4, 137, 134, 134, 21, 1, 190, 153, 72, 165, 208, 88, 58, 175, 116, 157, 191, 55, 135, 77, 135, 93, 133, 127, 130, 130, 156, 70, 210, 1, 24, 76, 183, 146, 149, 0, 51, 158, 187, 132, 90, 185, 190, 45, 153, 41, 161, 55, 5, 8, 4, 24, 76, 61, 74, 64, 203, 59, 113, 127, 105, 52, 107, 42, 136, 41, 168, 209, 9, 69, 142, 186, 190, 53, 96, 193, 69, 188, 107, 74, 84, 86, 86, 180, 145, 78, 89, 164, 135, 44, 99, 170, 166, 27, 5, 52, 45, 188, 75, 3, 18, 48, 125, 139, 81, 45, 163, 154, 16, 131, 12, 109, 40, 28, 143, 97, 24, 69, 20, 102, 113, 100, 205, 36, 1, 113, 70, 200, 23, 50, 50, 75, 139, 158, 168, 28, 198, 44, 53, 8, 97, 86, 5, 60, 7, 200, 84, 205, 48, 113, 120, 21, 92, 85, 43, 160, 174, 102, 155, 86, 101, 151, 130, 114, 173, 145, 176, 151, 60, 188, 164, 112, 179, 11, 56, 52, 137, 95, 81, 115, 90, 93, 39, 89, 187, 65, 188, 55, 101, 55, 138, 9, 63, 71, 28, 194, 169, 54, 95, 126, 72, 95, 38, 138, 35, 192, 204, 81, 133, 55, 97, 145, 192, 16, 181, 96, 76, 90, 85, 6, 18, 163, 83, 115, 171, 86, 63, 109, 124, 57, 138, 97, 207, 48, 204, 51, 177, 179, 11, 135, 114, 83, 101, 152, 191, 186, 162, 173, 134, 28, 24, 76, 30, 33, 28, 13, 49, 120, 32, 30, 161, 118, 4, 110, 9, 106, 56, 94, 194, 104, 162, 156, 49, 194, 134, 109, 33, 159, 59, 82, 90, 85, 206}));

  return 0;
}
